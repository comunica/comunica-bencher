#!/bin/bash
# Main bin script for Comunica Bencher

print_usage () {
    echo "Usage: comunica-bencher <action>"
    echo "Actions:"
    echo "  version       Prints the current comunica-bencher version."
    echo "  init          Initializes a new Comunica Bencher experiment."
    echo "  init-matrix   Initializes a new Comunica Bencher experiment matrix."
    echo "  prepare-data  Generates the dataset and queries for an experiment."
    echo "  gen-matrix    Generates a matrix of experiments."
    echo "  run-local     Executes the experiment on the current machine."
    echo "  plot          Generate TiKZ-based graphs."
    echo "  stats         Analyze the results."
    echo "  dief          Generate diefficiency metrics."
    echo "  collect       Collect all results in a single archive."
    exit 1
}

is_matrix() {
    [[ -f matrix-values.json && -d template ]]
}

ensure_initialized() {
    if [[ ! -f .env ]] ; then
        echo "The current directory is not a valid experiment"
        echo "First run 'comunica-bencher init', and try again in the created directory"
        exit 1
    fi
}

ensure_installed_docker() {
    if ! docker --version > /dev/null; then
        echo "Error: This tool requires Docker to be installed."
        exit 1
    fi
}

ensure_installed_docker_compose() {
    if ! docker-compose --version > /dev/null; then
        echo "Error: This tool requires docker-compose to be installed."
        exit 1
    fi
}

# Validate input args
if [[ $# -lt 1 ]] ; then
    echo "Error: Missing script action"
    print_usage
fi

# Execute action
action=$1
remainingargs=${@:2}
lib_dir="$(dirname "${BASH_SOURCE[0]}")/../lib"
case "$action" in
version)
    cat $lib_dir/../VERSION
    ;;
init)
    $lib_dir/init.sh $remainingargs
    ;;
init-matrix)
    $lib_dir/init-matrix.sh $remainingargs
    ;;
prepare-data)
    if is_matrix; then
        echo "Detected experiment matrix"
        pushd template > /dev/null
        $0 prepare-data
        popd > /dev/null
        $0 gen-matrix
    else
        ensure_initialized
        ensure_installed_docker
        $lib_dir/prepare-data.sh $remainingargs
    fi
    ;;
gen-matrix)
    node $lib_dir/gen-matrix.js matrix-values.json template combination_ matrix-names.json
    ;;
run-local)
    # If we have input args, assume that the args are experiments that needs to be run.
    # If not, we run the current dir as experiment.
    if [ $# -ne 1 ]; then
        for exp in $remainingargs; do
            echo "Running experiment $exp..."
            pushd $exp > /dev/null
            $0 run-local
            popd > /dev/null
        done
    else
        if is_matrix; then
            echo "Detected experiment matrix"
            $0 run-local combination_*
        else
            ensure_initialized
            ensure_installed_docker
            ensure_installed_docker_compose
            $lib_dir/run-local.sh $remainingargs
        fi
    fi
    ;;
plot)
    $lib_dir/plot.sh $remainingargs
    ;;
stats)
    $lib_dir/stats.sh $remainingargs
    ;;
dief)
    $lib_dir/dief.sh $remainingargs
    ;;
collect)
    if is_matrix; then
        echo "Detected experiment matrix"
        $lib_dir/collect-results.sh combination_*
    else
        ensure_initialized
        $lib_dir/collect-results.sh .
    fi
    ;;
*)
    echo "Invalid action '$action'"
    print_usage
    ;;
esac
